<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Aubrac on HerdWare</title>
    <link>https://herd-ware.github.io/doc/hw/cores/aubrac/index.html</link>
    <description>Recent content in Aubrac on HerdWare</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="https://herd-ware.github.io/doc/hw/cores/aubrac/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Front-end</title>
      <link>https://herd-ware.github.io/doc/hw/cores/aubrac/front/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://herd-ware.github.io/doc/hw/cores/aubrac/front/index.html</guid>
      <description>Sommaire Étage PC  Étages IF{0-2}  Étage IF3  Paramètres   Vue globale Le Front-End est la partie matérielle responsable de récupérer les instructions en mémoire. Directement associé au NLP pour la prédiction de branchement, il calcule chaque cycle la valeur du compteur ordinal (PC pour program counter en anglais). Ensuite, il l&amp;rsquo;utilise pour charger les instructions correspondantes depuis la mémoire.
 Figure 1: Vue globale du Front-End.     La version actuelle du Front-End est composée de cinq étages configurables:</description>
    </item>
    <item>
      <title>Prédiction de branchement</title>
      <link>https://herd-ware.github.io/doc/hw/cores/aubrac/pred/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://herd-ware.github.io/doc/hw/cores/aubrac/pred/index.html</guid>
      <description>Sommaire Prédicteur de prochaine ligne (NLP)   Principes Pour anticiper les aléas du flot de contrôle, le processeur Aubrac met en place des mécanismes de prédiction de branchement. Le principe est de sauvegarder des informations au cours de l&amp;rsquo;exécution afin d&amp;rsquo;anticiper les futurs branchements ou sauts.
Différentes implémentations de prédicteurs sont possibles. Elles varient généralement par leur complexité et leur efficacité.
Implémentations Actuellement, le processeur Aubrac dispose comme prédicteur de branchement:</description>
    </item>
    <item>
      <title>Back-end</title>
      <link>https://herd-ware.github.io/doc/hw/cores/aubrac/back/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://herd-ware.github.io/doc/hw/cores/aubrac/back/index.html</guid>
      <description>Sommaire Étage ID  Étage EX{0-2}  Étage MEM  Étage WB  Registres généraux (GPR)  Registres de Contrôle et de Statut (CSR)   </description>
    </item>
    <item>
      <title>Hiérarchie mémoire</title>
      <link>https://herd-ware.github.io/doc/hw/cores/aubrac/mem-hier/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://herd-ware.github.io/doc/hw/cores/aubrac/mem-hier/index.html</guid>
      <description>Sommaire Mémoires caches  Interruptions locales du processeur (CLINT)  Timers privilégiés  Moniteur des performances matérielles (HPM)   </description>
    </item>
    <item>
      <title>Top</title>
      <link>https://herd-ware.github.io/doc/hw/cores/aubrac/top/index.html</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://herd-ware.github.io/doc/hw/cores/aubrac/top/index.html</guid>
      <description>Sommaire Pipeline  Processeur  Paramètres   </description>
    </item>
  </channel>
</rss>